<div class="flex items-center text-xs text-base-content  text-medium">
  <div
    x-cloak
    x-data="{ open: false }"
    @keydown.escape.stop="open = false"
    @click.outside="open = false"
    class="relative block text-left"
  >
    <button
      @click="open = !open"
      aria-haspopup="true"
      x-bind:aria-expanded="open"
      aria-expanded="true"
      type="button"
      class="flex items-center p-2 -my-2 text-base-content opacity-60 bg-base-100 rounded-full  hover:bg-neutral hover:bg-opacity-30 hover:text-base-content opacity-60 focus:outline-none focus:ring-2 focus:ring-secondary-500"
      id="menu-0-button"
      aria-expanded="false"
      aria-haspopup="true"
    >
      <span class="sr-only">{l("Open options")}</span>
      <!-- Heroicon name: solid/dots-vertical -->
      <svg
        class="w-5 h-5"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 20 20"
        fill="currentColor"
        aria-hidden="true"
      >
        <path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z" />
      </svg>
    </button>
    <div
      x-description="sort tasks dropdown menu, show/hide based on menu state."
      x-show="open"
      x-transition:enter="transition ease-out duration-100"
      x-transition:enter-start="transform opacity-0 scale-95"
      x-transition:enter-end="transform opacity-90 scale-100"
      x-transition:leave="transition ease-in duration-75"
      x-transition:leave-start="transform opacity-90 scale-100"
      x-transition:leave-end="transform opacity-0 scale-95"
      class="absolute right-0 z-[8000] w-56 mt-2 origin-top-left bg-base-100 divide-y divide-gray-100 rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none"
      style="z-index: 20000"
      role="menu"
      aria-orientation="vertical"
    >
      <div class="py-1" role="none">
        <div
          :if={(!e(@task, :provider, :id, nil) && !e(@task, :provider_id, nil)) ||
            e(@task, :provider, :id, nil) != ulid(@current_user)}
          phx-click="ValueFlows.Planning.Intent:assign:select"
          class="block w-full px-4 py-2 text-sm text-left text-base-content transition duration-150 ease-in-out hover:bg-neutral hover:bg-opacity-30 cursor-pointer"
          phx-value-id="me"
          phx-value-name="Me"
          phx-value-context_id={"#{@task.id}"}
          phx-value-field="provider"
        >
          {l("Assign to myself")}
        </div>
        <!-- <div :if={{!@task.finished}} class="block w-full px-4 py-2 text-sm text-left text-base-content  transition duration-150 ease-in-out hover:bg-neutral hover:bg-opacity-30 ">
              Set in progress
            </div> -->

        <div
          :if={!@task.finished}
          :on-click="ValueFlows.Planning.Intent:status:finished"
          phx-value-id={@task.id}
          class="block w-full px-4 py-2 text-sm text-left text-base-content  transition duration-150 ease-in-out hover:bg-neutral hover:bg-opacity-30 cursor-pointer"
        >
          {l("Set as completed")}
        </div>

        <div
          :if={@task.finished}
          :on-click="ValueFlows.Planning.Intent:status:open"
          phx-value-id={@task.id}
          class="block w-full px-4 py-2 text-sm text-left text-base-content  transition duration-150 ease-in-out hover:bg-neutral hover:bg-opacity-30 cursor-pointer"
        >
          {l("Re-open")}
        </div>

        <!-- DELETE THE TASK -->
        <Bonfire.UI.Common.OpenModalLive
          id={Pointers.ULID.generate()}
          open_btn_class="cursor-pointer w-full p-3 hover:bg-base-content/10 rounded-lg cursor-pointer"
          title_text={l("Delete this task")}
        >
          <!--  -->
          <!-- {rich l "You may be able to undo this deletion *in some cases*, but in any case the data will eventually be permanently deleted from this instance."} -->
          {l("A request will be sent to remote instances to delete it as well.")}
          <:open_btn>
            <div class="flex w-full px-4 py-2 text-sm text-left text-base-content  transition duration-150 ease-in-out hover:bg-neutral hover:bg-opacity-30 cursor-pointer">
              <Icon solid="Trash" class="w-4 h-4 mr-2 shrink-0 text-neutral-content/70" />
              <span class="truncate ellipsis">
                {l("Delete this task")}
              </span>
            </div>
          </:open_btn>
          <:action_btns>
            <button
              :on-click="Bonfire.Social.Objects:delete"
              phx-value-id={@task.id}
              phx-value-redirect_after={"/coordination/list/" <> e(@task, :output_of, :id, "")}
              class="normal-case btn btn-error btn-sm cursor-pointer"
            >
              <Icon solid="Trash" class="w-4 h-4 mr-2 shrink-0" />
              <span class="truncate ellipsis">{l("Delete this task")}</span>
            </button>
          </:action_btns>
        </Bonfire.UI.Common.OpenModalLive>
      </div>
    </div>
  </div>
</div>
