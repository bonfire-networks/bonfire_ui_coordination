<div class="flex items-start p-4">
  <div class="flex-1">
    <div class="flex items-center space-x-3">
      <div>
        <div class="flex items-center gap-3 text-lg font-bold text-base-content/80">
          <a aria-label="Navigate to the previous page" href="javascript:window.history.back()">
            <span class="btn btn-outline btn-sm btn-circle">
              <Icon outline="ChevronLeft" class="w-4 h-4" />
            </span>
          </a>
          <span :if={length(e(@task, :context, [])) > 0}>
            <LiveRedirect
              :for={scope <- e(@task, :context, [])}
              to={"/coordination/task/#{scope.id}"}
              class="text-sm font-medium cursor-pointer text-base-content opacity-60 hover:underline"
            >
              {e(scope, :name, "")} :&nbsp;
            </LiveRedirect>
          </span>

          {rich(@task.name)}
        </div>
        <span :if={@task.output_of} class="flex mt-3 text-sm text-base-content opacity-70">
          {l("Task in")}
          <LiveRedirect to={"/coordination/list/" <> @task.output_of.id} class="ml-1 underline inline_flex">
            {rich(@task.output_of.name)}
          </LiveRedirect>
        </span>
      </div>
    </div>
  </div>
  <div class="flex items-center mr-1">
    <div
      x-cloak
      x-data="{ open_task_dropdown: false }"
      @keydown.escape.stop="open_task_dropdown = false"
      @click.outside="open_task_dropdown = false"
      class="relative inline-block ml-3 text-left"
    >
      <div>
        <button
          type="button"
          class="btn btn-circle btn-sm btn-ghost"
          id="menu-0-button"
          x-ref="button"
          @click="open_task_dropdown = !open_task_dropdown"
          @keyup.space.prevent="onButtonEnter()"
          @keydown.enter.prevent="onButtonEnter()"
          aria-expanded="true"
          aria-haspopup="true"
          @keydown.arrow-up.prevent="onArrowUp()"
          @keydown.arrow-down.prevent="onArrowDown()"
        >
          <span class="sr-only">{l("Open options")}</span>
          <Icon outline="DotsVertical" class="w-5 h-5" />
        </button>
      </div>
      <div
        x-description="User profile dropdown menu, show/hide based on menu state."
        x-show="open_task_dropdown"
        x-transition:enter="transition ease-out duration-100"
        x-transition:enter-start="transform opacity-0 scale-95"
        x-transition:enter-end="transform opacity-60 scale-100"
        x-transition:leave="transition ease-in duration-75"
        x-transition:leave-start="transform opacity-60 scale-100"
        x-transition:leave-end="transform opacity-0 scale-95"
        class="absolute right-0 w-56 p-3 mt-4 origin-top-left rounded-md shadow-lg bg-neutral ring-1 ring-neutral-content ring-opacity-5 focus:outline-none"
        role="menu"
        aria-orientation="vertical"
        aria-labelledby="user-profile-menu"
      >
        <div class="py-1" role="none">
          <!-- DELETE THE TASK -->
          <Bonfire.UI.Common.OpenModalLive
            id={Pointers.ULID.generate()}
            open_btn_class="cursor-pointer w-full p-3 hover:bg-base-content/10 rounded-lg"
            title_text={l("Delete this task")}
          >
            <!--  -->
            <!-- {rich l "You may be able to undo this deletion *in some cases*, but in any case the data will eventually be permanently deleted from this instance."} -->
            {l("A request will be sent to remote instances to delete it as well.")}
            <:open_btn>
              <div class="flex items-center text-sm cursor-pointer text-neutral-content">
                <Icon solid="Trash" class="w-4 h-4 mr-2 shrink-0 text-neutral-content/70" />
                <span class="truncate ellipsis">
                  {l("Delete this task")}
                </span>
              </div>
            </:open_btn>
            <:action_btns>
              <button
                :on-click="Bonfire.Social.Objects:delete"
                phx-value-id={@task.id}
                phx-value-redirect_after={"/coordination/list/" <> e(@task, :output_of, :id, "")}
                class="normal-case btn btn-error btn-sm"
              >
                <Icon solid="Trash" class="w-4 h-4 mr-2 shrink-0" />
                <span class="truncate ellipsis">{l("Delete this task")}</span>
              </button>
            </:action_btns>
          </Bonfire.UI.Common.OpenModalLive>
        </div>
      </div>
    </div>
  </div>
</div>
