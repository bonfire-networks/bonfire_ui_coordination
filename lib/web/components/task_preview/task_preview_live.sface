<li class="shadow bg-base-100 rounded-xl">
  <div class="flex flex-col items-start gap-4 py-4">
    <div class="flex items-center flex-1 w-full">
      <div class="flex flex-col flex-1">
        <div class="flex items-start gap-3">
        <div :if={!e(@object, :finished, nil) and !e(@object, :provider, nil)} class="flex items-center p-1 px-2 rounded-lg bg-base-content/10">
          <svg class="mr-2" width="14" height="14" viewBox="0 0 14 14" fill="none"><rect x="1" y="1" width="12" height="12" rx="6" stroke="#e2e2e2" stroke-width="2" fill="none" /><path
              fill="#e2e2e2"
              stroke="none"
              d="M 3.5,3.5 L3.5,0 A3.5,3.5 0 0,1 3.5, 0 z"
              transform="translate(3.5,3.5)"
            /></svg>
          <span class="text-sm text-base-content opacity-60">{l("Unassigned")}</span>
        </div>
        <div :if={!e(@object, :finished, nil) and e(@object, :provider, nil)} class="flex items-center p-1 px-2 rounded-lg bg-base-content/10">
          <svg width="14" height="14" class="mr-2" viewBox="0 0 14 14" fill="none"><rect x="1" y="1" width="12" height="12" rx="6" stroke="#f2c94c" stroke-width="2" fill="none" /><path
              fill="#f2c94c"
              stroke="none"
              d="M 3.5,3.5 L3.5,0 A3.5,3.5 0 0,1 3.5, 7 z"
              transform="translate(3.5,3.5)"
            /></svg>
          <span class="text-sm text-base-content opacity-60">{l("In progress")}</span>
        </div>
        <div :if={e(@object, :finished, nil)} class="flex items-center p-1 px-2 rounded-lg bg-base-content/10">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="w-4 h-4 mr-2 text-green-500"
            viewBox="0 0 20 20"
            fill="currentColor"
          >
            <path
              fill-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
              clip-rule="evenodd"
            />
          </svg>
          <span class="text-sm text-base-content opacity-60">{l("Completed")}</span>
        </div>
        <LivePatch
          to={"/coordination/task/#{e(@object, :id, "")}"}
          class="text-sm font-medium cursor-pointer text-base-content opacity-80 hover:underline"
        >{e(@object, :name, e(@object, :note, "Untitled task"))}
        </LivePatch>
        </div>
        <span :if={length(e(@object, :context, [])) > 0}>
          {l "in"}
          <span :for={scope <- e(@object, :context, [])}>
            <LivePatch
              :if={e(scope, :id, nil)}
              to={"/coordination/task/#{e(scope, :id, "")}"}
              class="flex items-center text-sm cursor-pointer text-base-content/60font-regular hover:underline"
            >
              {e(scope, :name, "")}
            </LivePatch>
          </span>
        </span>
      </div>

      <div class="flex items-center ml-4 space-x-6">
        <Bonfire.UI.Common.LikeActionWithoutLabelLive
          id={ComponentID.new(Bonfire.UI.Common.LikeActionWithoutLabelLive, @object)}
          object={@object}
        />
        <Bonfire.UI.Coordination.TaskActionsMenuLive 
          :if={module_enabled?(Bonfire.UI.Coordination.TaskActionsMenuLive)}
          task={@object} />
      </div>
    </div>
    <LivePatch
      :if={e(@object, :provider, :id, nil)}
      to={path(e(@object, :provider, nil))}
      class="flex items-center text-xs text-base-content opacity-70 text-medium"
    >
      <Bonfire.UI.Common.AvatarLive
        class="inline-block w-6 h-6 rounded-full bg-base-100"
        user={@object.provider}
      />
    </LivePatch>

    <div class="flex items-center gap-2 text-sm text-base-content/70 text-medium">
      <Icon solid="Calendar" class="w-4 h-4 text-base-content/70"/>
      <span>{e(@object, :due, "No due date")}</span>
    </div>
  </div>
</li>