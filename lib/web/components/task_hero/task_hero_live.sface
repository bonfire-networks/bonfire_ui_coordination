<div class="relative m-6 p-6 border-base-content/10 border rounded-xl">
  <div class="flex flex-col">
    <div class="flex justify-between">
      <div class="text-2xl font-semibold text-base-content">{rich(@task.name)}</div>
      <div class="flex items-center justify-end gap-2">
        <Bonfire.Boundaries.Web.BoundaryIconLive
          with_label
          id={ComponentID.new(Bonfire.Boundaries.Web.BoundaryIconLive, @task)}
          object={@task}
        />
        <Bonfire.UI.Social.Activity.InstanceIconLive object={@task} />

        <div :if={@is_editable?} class="dropdown dropdown-end">
          <button tabindex="0" class="btn btn-ghost btn-circle btn-sm">
            <span class="text-base-content/80">
              <Icon solid="DotsVertical" class="w-5 h-5" />
            </span>
          </button>
          <ul
            tabindex="0"
            class="w-60 z-[110] !block shadow menu menu-compact dropdown-content bg-neutral rounded dropdown_actions"
            role="menu"
            aria-orientation="vertical"
            aria-labelledby="more-menu"
          >
            <li>
              <button
                :if={!@task.finished}
                :on-click="ValueFlows.Planning.Intent:status:finished"
                phx-value-id={@task.id}
                phx-value-redirect_after={~p"/coordination/task/"}
                type="button"
                class="items-center m-2 normal-case cursor-pointer btn-sm btn-success btn place-content-center"
              >
                {l("Close")}
              </button>

              <button
                :if={@task.finished}
                :on-click="ValueFlows.Planning.Intent:status:unfinished"
                phx-value-id={@task.id}
                phx-value-redirect_after={~p"/coordination/task/"}
                type="button"
                class="items-center m-2 normal-case cursor-pointer btn-sm btn place-content-center"
              >
                {l("Re-open")}
              </button>
            </li>
            <li>
              <Bonfire.UI.Social.Activity.DeleteObjectLive
                object={@task}
                creator_id={e(@task, :provider, :id, nil) || e(@task, :receiver, :id, nil)}
                object_type_readable={l("task")}
                redirect_after={~p"/coordination/list/" <> e(@task, :output_of, :id, "")}
              />
            </li>
          </ul>
        </div>
      </div>
    </div>

    <div class="flex items-center gap-2 mt-2">
      <Bonfire.UI.Coordination.TaskSetStatusLive
        redirect_after={~p"/coordination/task/"}
        task_id={@task.id}
        finished={@task.finished}
      />
      <span :if={@task.output_of} class="flex text-sm text-base-content/70">
        {l("Task in")}
        <LiveRedirect to={~p"/coordination/list/" <> @task.output_of.id} class="ml-1 link inline_flex">
          {rich(@task.output_of.name)}
        </LiveRedirect>
      </span>
    </div>

    <div class="flex flex-col justify-between tablet:flex-row">
      <div class="flex flex-col my-4">
        <div class="flex items-center gap-6">
          <div :if={e(@task, :due, nil)} class="flex flex-col mb-2">
            <span class="mb-2 text-xs font-semibold text-base-content/70">{l("Due")}</span>
            <div class={
              "inline-flex w-fit items-center bg-neutral gap-1 text-xs p-2 py-1 rounded text-medium",
              "bg-warning text-warning-content":
                Date.diff(e(@task, :due, nil), Date.utc_today()) in Enum.to_list(0..3),
              "bg-error text-error-content": Date.diff(e(@task, :due, nil), Date.utc_today()) < 0
            }>
              <Icon solid="Calendar" class="w-4 h-4" />
              <span>{DatesTimes.date_from_now(e(@task, :due, nil)) || l("No due date")}</span>
            </div>
          </div>

          <div :if={e(@task, :provider, nil)} class="">
            <span class="mb-2 text-xs font-semibold text-base-content/70">{l("Assigned")}</span>
            <div class="flex items-center gap-2">
              <Bonfire.UI.Common.AvatarLive class="w-8 h-8" user={e(@task, :provider, nil)} />
              <span class="text-sm font-medium text-base-content/80">{e(@task, :provider, :name, nil)}</span>
            </div>
          </div>
        </div>
        <div class="my-4">
          <div class="mb-2 text-xs font-semibold text-base-content/70">{l("Labels & Topics")}</div>
          <div class="flex items-center gap-3">
            <!-- to={"/+#{e(tag, :character, :username, nil) || tag.id}"} -->
            <LinkLive
              :for={tag <- e(@task, :tags, [])}
              to={e(@__context__, :category_link_prefix, ~p"/coordination/tasks?tag_ids[]=") <> tag.id}
              class="badge badge-info"
            >{e(tag, :profile, :name, nil) || e(tag, :character, :username, nil)}</LinkLive>
            <Bonfire.Classify.Web.TagModalLive :if={@is_editable?} object={@task}>
              <span class="badge badge-success">+</span>
            </Bonfire.Classify.Web.TagModalLive>
          </div>
        </div>

        <!-- <span
          :if={String.length(e(@task, :note, "")) > 0}
          class="mt-3 text-base font-normal prose text-base-content/70"
        >{e(@task, :note, "")}</span> -->
        <div :if={true} class="flex flex-col px-2 mt-3">
          <Bonfire.UI.ValueFlows.EditDescriptionLive
            item={@task}
            is_editable?={@is_editable?}
            submit_event="ValueFlows.Planning.Intent:update"
          />
        </div>
      </div>
      <Bonfire.UI.Coordination.TaskActionsLive is_editable?={@is_editable?} intent={@task} />
    </div>
  </div>
</div>

<!-- <div class="relative py-4 md:rounded-t-xl bg-base-100">
  <div class="z-50 flex flex-col md:flex-row md:items-start md:justify-between">
    <div class="flex items-start gap-3">
      <Bonfire.UI.Common.BackButtonLive showing_within={@showing_within} />
      <div class="flex flex-col">
        <div class="flex items-center gap-3 text-lg font-bold text-base-content/80">
          <span :if={length(e(@task, :context, [])) > 0}>
            <LiveRedirect
              :for={scope <- e(@task, :context, [])}
              to={~p"/coordination/task/#{scope.id}"}
              class="text-sm font-medium cursor-pointer text-base-content/70 link link-hover"
            >
              {e(scope, :name, "")} :&nbsp;
            </LiveRedirect>
          </span>
          <div>{rich(@task.name)}</div>
        </div>
        <span :if={@task.output_of} class="flex text-sm text-base-content/70">
          {l("Task in")}
          <LiveRedirect to={~p"/coordination/list/" <> @task.output_of.id} class="ml-1 link inline_flex">
            {rich(@task.output_of.name)}
          </LiveRedirect>
        </span>
      </div>
    </div>
    <div class="flex items-center gap-2">
      <Bonfire.UI.Coordination.TaskSetStatusLive
        redirect_after={~p"/coordination/task/"}
        task_id={@task.id}
        finished={@task.finished}
      />
      <div class="dropdown dropdown-end">
        <button tabindex="0" class="btn btn-ghost btn-circle btn-sm">
          <span class="text-base-content/80">
            <Icon solid="DotsVertical" class="w-5 h-5" />
          </span>
        </button>
        <ul
          tabindex="0"
          class="w-60 z-[110] shadow menu menu-compact dropdown-content bg-neutral rounded dropdown_actions"
          role="menu"
          aria-orientation="vertical"
          aria-labelledby="more-menu"
        >
          <li>
           <Bonfire.UI.Social.Activity.DeleteObjectLive
              object={@task}
              creator_id={e(@task, :provider, :id, nil) || e(@task, :receiver, :id, nil)}
              object_type_readable={l("task")}
              redirect_after={~p"/coordination/list/" <> e(@task, :output_of, :id, "")}
            />
          </li>
        </ul>
      </div>
    </div>
  </div>
</div> -->